CCOMPILE=gcc
CPPCOMPILE=g++

E=
C=.c
CPP=.cpp
LOG=.log
PROF=.profile

INCLUDE=../include/
CSRCDIR=../src/c/

CTESTDIR=../test/c/
JAVATESTDIR=../test/java/

EXEDIR=exe/
LOGDIR=log/
PROFDIR=profile/
SPLINTDIR=splint/

CSRC=$(CSRCDIR)PCMlinkedlist$(C)\
     $(CSRCDIR)PCMfind$(C)\
     $(CSRCDIR)PCMsort$(C)\
     $(CSRCDIR)PCMarray$(C)\
     $(CSRCDIR)PCM$(C)\
     $(CSRCDIR)PCMstring$(C)\
     $(CSRCDIR)PCMmath$(C)\
     $(CSRCDIR)PCMfile$(C)\
     $(CSRCDIR)PCMstack$(C)

EXE=$(EXEDIR)test_PCM_link$(E)\
    $(EXEDIR)test_PCM_string$(E)\
    $(EXEDIR)test_PCM_math$(E)\
    $(EXEDIR)test_PCM_file$(E)\
    $(EXEDIR)test_PCM$(E)\
    $(EXEDIR)test_PCM_stack$(E)\
    $(EXEDIR)test_PCM_array$(E)

CTEST=$(CTESTDIR)test_PCM_link$(C)\
      $(CTESTDIR)test_PCM_string$(C)\
      $(CTESTDIR)test_PCM_math$(C)\
      $(CTESTDIR)test_PCM_file$(C)\
      $(CTESTDIR)test_PCM$(C)\
      $(CTESTDIR)test_PCM_stack$(C)\
      $(CTESTDIR)test_PCM_array$(C)

LOGFILES=$(LOGDIR)test_PCM_link$(LOG)\
         $(LOGDIR)test_PCM_string$(LOG)\
         $(LOGDIR)test_PCM_math$(LOG)\
         $(LOGDIR)test_PCM_file$(LOG)\
         $(LOGDIR)test_PCM$(LOG)\
         $(LOGDIR)test_PCM_stack$(LOG)\
         $(LOGDIR)test_PCM_array$(LOG)

