# -*- makefile.common -*-
# #####################################################################
# driver for makefiles in bin subdirectories
# #####################################################################
help:
	@(echo "" \
	;echo "Choose a target:" \
	;echo "" \
	;echo "make [help]   -- print this help screen" \
	;echo "make [test_readfile.exe]   -- build test_init_and_free.exe" \
	;echo "make [test]   -- build all tests" \
	;echo "make [splint] -- use splint to check all C files" \
	)

compile =                                                    \
         $(CCOMPILE) -g -I $(INCLUDE) $(TESTDIR)$(1)$(C) $(CSRC) \
         -o $(1)$(E);                                         \
         $(1)$(E) > $(1)$(LOG);                               \
			cat $(1)$(LOG)
tags:
	@cd ../;ctags -R
cppcompile =                                                  \
         $(CPPCOMPILE) -I $(INCLUDE) $(TESTDIR)$(1)$(CPP) $(CPPSRC) \
			-o $(1)$(E);                                                    \
			$(1)$(E) > $(1)$(LOG);                                          \
			cat $(1)$(LOG)
         
reader: $(EXE)
	@if test `cat $(LOGFILES) | grep 'ORC Error' | wc -l` -gt 0; then \
	  echo "";\
	  echo "ORC Errors found! try  grep 'ORC Error' *.log"; \
	  echo "";\
	else \
	  echo "All tests completed successfully"; \
	fi
splint: $(CSRC) $(CTEST)
	@splint -I $(INCLUDE) $(CSRC) $(CTEST) > splint
clean:
	@rm -f *$(E) *$(LOG) splint *.stackdump
# C files
test_link_init_and_free$(E): $(CSRC) $(TESTDIR)test_link_init_and_free$(C)
	@$(call compile,test_link_init_and_free)
test_link_one_element$(E): $(CSRC) $(TESTDIR)test_link_one_element$(C)
	@$(call compile,test_link_one_element)
test_link_many_element$(E): $(CSRC) $(TESTDIR)test_link_many_element$(C)
	@$(call compile,test_link_many_element)
test_link_readfile$(E): $(CSRC) $(TESTDIR)test_link_readfile$(C)
	@$(call compile,test_link_readfile)
check_bounds$(E): $(CSRC) $(TESTDIR)check_bounds$(C)
	@$(call compile,check_bounds)
getchar$(E): $(CSRC) $(TESTDIR)getchar$(C)
	@$(call compile,getchar)
test_sq_inout$(E): $(CSRC) $(TESTDIR)test_sq_inout$(C)
	@$(call compile,test_sq_inout)
test_sq_init_and_free$(E):$(CSRC) $(TESTDIR)test_sq_init_and_free$(C)
	@$(call compile,test_sq_init_and_free)
test_sq_delete$(E): $(CSRC) $(TESTDIR)test_sq_delete$(C)
	@$(call compile,test_sq_delete)
test_sq_insert$(E): $(CSRC) $(TESTDIR)test_sq_insert$(C)
	@$(call compile,test_sq_insert)
test_sq_merge$(E): $(CSRC) $(TESTDIR)test_sq_merge$(C)
	@$(call compile,test_sq_merge)
test_sq_sort_and_find$(E): $(CSRC) $(TESTDIR)test_sq_sort_and_find$(C)
	@$(call compile,test_sq_sort_and_find)
test_ORCstring$(E): $(CSRC) $(TESTDIR)test_ORCstring$(C)
	@$(call compile,test_ORCstring)
test_ORCmath$(E): $(CSRC) $(TESTDIR)test_ORCmath$(C)
	@$(call compile,test_ORCmath)
# C++ files
cast$(E): $(CPPSRC) $(TESTDIR)cast$(CPP)
	@$(call cppcompile,cast)
.PHONY: test splint clean

