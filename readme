********这个项目仅仅用来学习和交流，不作其他应用***********

To solve below problems:

• During daily work, how to improve our programming skills?
   (including algorithms, frameworks, tools)

• How to invovle as much as possiable people to learn programming, optimization modeling?

• How to teach beginners basic programming skills, in code level?

• Saw a very interesting algorithm or puzzle, and want to try,
  but don't have a good platform to write code and share.

So I wrote this pcm project in github, the name is stand for (Programmer Competency Matrix):
http://www.indiangeek.net/wp-content/uploads/Programmer%20competency%20matrix.htm

Directory structure
pcm (
   bin      ----------- makefile and python wrapper
   data     ----------- test data
   doc      ----------- design doc
   include  ----------- header files
   readme   ----------- this file
   src      ----------- source
   test     ----------- test file
   util     ----------- utility files, such as makefiles
)

To Be Done:
   1. File Statistics
   2. Sorting Algorithm
   3. Search algorithm
   4. IntArray
   5. Linkedlist
   6. Stack
   7. Mathematics
   8. String
   9. Automated build
  10. Automated testing
  11. Automated performance profiling
  12. Python wapper by Swig and Interactive Python client on linux

Chinese Version:

我一直在思考以下问题，

•在日常工作中, 怎么沉淀我们的编程技术（包括算法, 框架, 工具）, 让我们每天都进步一点点？

•怎么让大家方便的和我们一起研究基础的编程技术, 集合大家集体的智慧, 最好能写代码,
那个排序算法比较快等等, 怎么使用C语言中的函数指针, 怎么让测试自动化, 怎么profile 
C程序, 怎么使用git,vim,make 等等？

•如何尽可能方便地交流编程技术？方便交流数学建模技巧？学习建模方法？

•看到非常有趣的算法或者谜题, 也想自己实现试试看, 但是缺少一个方便的平台来写代码和共享以及讨论。

所以就做了这个叫做PCM的东西, PCM的名字来源于(Programmer Competency Matrix):
http://www.indiangeek.net/wp-content/uploads/Programmer%20competency%20matrix.htm

目录结构

pcm (
   bin      ----------- makefile and python wrapper
   data     ----------- test data
   doc      ----------- design doc
   include  ----------- header files
   readme   ----------- this file
   src      ----------- source
   test     ----------- test file
   util     ----------- utility files, such as makefiles
)

To Be Done:
   1. File Statistics
   2. Sorting Algorithm
   3. Search algorithm
   4. IntArray
   5. Linkedlist
   6. Stack
   7. Mathematics
   8. String
   9. Automated build
  10. Automated testing
  11. Automated performance profiling
  12. Python wapper by Swig and Interactive Python client on linux
